{
  "identityPoolName": "testAuthIdentityPool",
  "allowUnauthenticatedIdentities": false,
  "resourceNameTruncated": "awsamp75218052",
  "userPoolName": "awsAmplifyTuto",
  "autoVerifiedAttributes": [
    "email"
  ],
  "mfaConfiguration": "OFF",
  "mfaTypes": [
    "SMS Text Message"
  ],
  "smsAuthenticationMessage": "Your authentication code is {####}",
  "smsVerificationMessage": "Your verification code is {####}",
  "emailVerificationSubject": "Forgot password code: {####}",
  "emailVerificationMessage": "Forgot password code: {####}",
  "defaultPasswordPolicy": false,
  "passwordPolicyMinLength": 8,
  "passwordPolicyCharacters": [],
  "requiredAttributes": [
    "phone_number",
    "email"
  ],
  "aliasAttributes": [],
  "userpoolClientGenerateSecret": false,
  "userpoolClientRefreshTokenValidity": 30,
  "userpoolClientWriteAttributes": [],
  "userpoolClientReadAttributes": [],
  "userpoolClientLambdaRole": "awsAmp75218052_userpoolclient_lambda_role",
  "userpoolClientSetAttributes": false,
  "sharedId": "75218052",
  "resourceName": "awsAmplifyTuto",
  "authSelections": "identityPoolAndUserPool",
  "serviceName": "Cognito",
  "usernameAttributes": [
    "email",
    "phone_number"
  ],
  "useDefault": "manual",
  "userPoolGroups": false,
  "userPoolGroupList": [],
  "adminQueries": false,
  "thirdPartyAuth": false,
  "authProviders": [],
  "hostedUI": true,
  "hostedUIDomainName": "8u6gdzadlcme",
  "authProvidersUserPool": [
    "Google"
  ],
  "hostedUIProviderMeta": "[{\"ProviderName\":\"Google\",\"authorize_scopes\":\"openid profile email\",\"AttributeMapping\":{\"phone_number\":\"phoneNumbers\",\"email\":\"email\",\"username\":\"sub\"}}]",
  "oAuthMetadata": "{\"AllowedOAuthFlows\":[\"code\"],\"AllowedOAuthScopes\":[\"phone\",\"email\",\"openid\",\"profile\",\"aws.cognito.signin.user.admin\"],\"CallbackURLs\":[\"https://8u6gdzadlcme-dev.auth.ap-northeast-2.amazoncognito.com/oauth2/idpresponse\"],\"LogoutURLs\":[\"https://8u6gdzadlcme-dev.auth.ap-northeast-2.amazoncognito.com/oauth2/idpresponse\"]}",
  "useEnabledMfas": false,
  "authRoleArn": {
    "Fn::GetAtt": [
      "AuthRole",
      "Arn"
    ]
  },
  "unauthRoleArn": {
    "Fn::GetAtt": [
      "UnauthRole",
      "Arn"
    ]
  },
  "breakCircularDependency": false,
  "dependsOn": []
}